{"version":3,"sources":["logo.svg","api.js","CitySearch.js","TimeFilter.js","Event.js","EventList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","requestAndSaveTokens","_callee","url","info","regenerator_default","a","wrap","_context","prev","next","axios","get","sent","data","access_token","refresh_token","localStorage","setItem","Date","now","abrupt","stop","getAccessToken","_callee2","REFRESH_URL","searchParams","code","TOKEN_URL","_context2","getItem","URLSearchParams","window","location","search","href","_callee3","query","token","URL","result","_context3","t0","clear","_callee4","lat","lon","radius","filter","_context4","events","CitySearch","state","input","suggestions","handleInputChanged","event","value","target","_this","setState","getSuggestions","then","handleSuggestionClicked","text","props","updateCity","_this2","this","listCities","map","suggestion","react_default","createElement","key","name_string","onClick","className","type","onChange","placeholder","Component","TimeFilter","Event","expanded","onDetailsButtonClicked","prevState","venue","group","local_time","local_date","name","yes_rsvp_count","address_1","city","localized_country_name","dangerouslySetInnerHTML","__html","description","visibility","link","EventList","src_Event","id","App","updateEvents","getUpcomingEvents","src_CitySearch","src_TimeFilter","src_EventList","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04b72831.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nasync function requestAndSaveTokens(url) {\n  const info = await axios.get(url);\n  if (info.data && info.data.access_token && info.data.refresh_token) {\n    localStorage.setItem('access_token', info.data.access_token);\n    localStorage.setItem('refresh_token', info.data.refresh_token);\n    localStorage.setItem('lastSavedTime', Date.now());\n    return info.data.access_token;\n  }\n  return null;\n}\n\nasync function getAccessToken() {\n  // If there is no token in localStorage, redirect to get code and then getToken from code\n  // If there are tokens, try first with access_token, if doesn't work, try to refreshToken\n  // If refresh token doesn't work, repeat from step 1\n\n  if (localStorage.getItem('access_token')) {\n    if (Date.now() - localStorage.getItem('lastSavedTime') < 3600000) {// 1 hour\n      return localStorage.getItem('access_token');\n    } else { // refresh token\n      const REFRESH_URL = 'https://c5usrytrsg.execute-api.eu-central-1.amazonaws.com/dev/api/refresh/'\n        + localStorage.getItem('refresh_token');\n      return await requestAndSaveTokens(REFRESH_URL);\n    }\n  } else {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n    if (code) {\n      const TOKEN_URL = 'https://c5usrytrsg.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\n        + code;\n      return await requestAndSaveTokens(TOKEN_URL);\n    } else {\n      // Redirect\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=59m4fh64fvor80i00f25e5ia7c&response_type=code&redirect_uri=https://mvtuong.github.io/meetup/';\n      return null;\n    }\n  }\n}\n\nasync function getSuggestions(query) {\n  try {\n    const token = await getAccessToken();\n    if (token) {\n      const URL = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n        + query\n        + '&access_token=' + token;\n      const result = await axios.get(URL);\n      return result.data;\n    }\n    return [];\n  } catch(e) {\n    localStorage.clear();\n    // window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=59m4fh64fvor80i00f25e5ia7c&response_type=code&redirect_uri=https://mvtuong.github.io/meetup/';\n    return [];\n  }\n  // return [\n  //   {\n  //     city: 'Munich',\n  //     country: 'de',\n  //     localized_country_name: 'Germany',\n  //     name_string: 'Munich, Germany',\n  //     zip: 'meetup3',\n  //     lat: 48.14,\n  //     lon: 11.58\n  //   },\n  //   {\n  //     city: 'Munich',\n  //     country: 'us',\n  //     localized_country_name: 'USA',\n  //     state: 'ND',\n  //     name_string: 'Munich, North Dakota, USA',\n  //     zip: '58352',\n  //     lat: 48.66,\n  //     lon: -98.85\n  //   }\n  // ];\n}\n\nasync function getUpcomingEvents(lat, lon, radius) {\n  let filter = '';\n  if (lat) {\n    filter += '&lat=' + lat;\n  }\n  if (lon) {\n    filter += '&lon=' + lon;\n  }\n  if (radius) {\n    filter += '&radius=' + radius;\n  }\n\n  try {\n    const token = await getAccessToken();\n    if (token) {\n      const URL = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public&page=20'\n        + filter\n        + '&access_token=' + token;\n      const result = await axios.get(URL);\n      return result.data.events;\n    }\n    return [];\n  } catch(e) {\n    localStorage.clear();\n    // window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=59m4fh64fvor80i00f25e5ia7c&response_type=code&redirect_uri=https://mvtuong.github.io/meetup/';\n    return [];\n  }\n\n  // return {\n  //   city: {\n  //     id: 1007700,\n  //     city: 'München',\n  //     lat: 48.14,\n  //     lon: 11.58,\n  //     state: '',\n  //     country: 'de',\n  //     zip: 'meetup3',\n  //     member_count: 1257\n  //   },\n  //   events: [\n  //     {\n  //       created: 1554400169000,\n  //       duration: 7200000,\n  //       id: '260347311',\n  //       name: 'Machine Learning (ML) Basics - Erstellung eines ML Modells',\n  //       date_in_series_pattern: false,\n  //       status: 'upcoming',\n  //       time: 1556613000000,\n  //       local_date: '2019-04-30',\n  //       local_time: '10:30',\n  //       updated: 1554400900000,\n  //       utc_offset: 7200000,\n  //       waitlist_count: 0,\n  //       yes_rsvp_count: 76,\n  //       venue: {\n  //         id: 26170566,\n  //         name: 'WebEx / Watson IoT Center Munich (Eventbrite registration necessary)',\n  //         lat: 48.176448822021484,\n  //         lon: 11.592610359191895,\n  //         repinned: true,\n  //         address_1: 'Mies-van-der-Rohe-Straße 6',\n  //         city: 'München',\n  //         country: 'de',\n  //         localized_country_name: 'Germany'\n  //       },\n  //       group: {\n  //         created: 1400181332000,\n  //         name: 'Big Data Developers in Munich',\n  //         id: 14476282,\n  //         join_mode: 'open',\n  //         lat: 48.13999938964844,\n  //         lon: 11.579999923706055,\n  //         urlname: 'Big-Data-Developers-in-Munich',\n  //         who: 'Members',\n  //         localized_location: 'München, Germany',\n  //         state: '',\n  //         country: 'de',\n  //         region: 'en_US',\n  //         timezone: 'Europe/Berlin'\n  //       },\n  //       link: 'https://www.meetup.com/Big-Data-Developers-in-Munich/events/260347311/',\n  //       description: '<p>Sprecher: Alexander Richthammer, Technical Specialist Data Science</p> <p>Im 7. Roundtable dreht sich alles um die Grundlagen und Best Practices der Erstellung eines Machine Learning Modells. Worauf muss man bei der Modellerstellung achten? Was kann ein ML Modell überhaupt leisten? Und was nicht. Was zeichnet ein gutes ML Modell aus? Was sind die Gütekriterien? Warum ist zum Beispiel die Gesamtgenauigkeit ein \"irreführendes Konzept\"? Diese und weitere Fragen werden im Meetup adressiert. Kurzum: Es geht um die Essenz, was bei der Modellerstellung wirklich wichtig ist. In einer Live-Demo werden schließlich die verschiedenen Möglichkeiten der Modellbildung in Watson Studio aufgezeigt (Notebook, R-Studio, SPSS Modeler, ML Wizard)</p> <p>Agenda<br/>- Was ist Machine Learning?<br/>- Mehrwert von ML Modellen für Unternehmen<br/>- Techniken der Modellierung<br/>- Evaluationskriterien (Accuracy, AUC, Recall etc.)<br/>- Live Demo Watson Studio</p> <p>Teilnahme:<br/>Für eine Vor-Ort-Teilnahme ist bis zum 25. April eine Registrierung bei Eventbrite mit vollständigem Namen zwingend notwendig: <a href=\"https://www.eventbrite.de/e/7-roundtable-machine-learning-ml-basics-erstellung-eines-ml-modells-tickets-59905026547\" class=\"linkified\">https://www.eventbrite.de/e/7-roundtable-machine-learning-ml-basics-erstellung-eines-ml-modells-tickets-59905026547</a></p> <p>Teilnahme remote via WebEx erfordert keine Registrierung bei Eventbrite: <a href=\"https://ibm.webex.com/meet/schneider\" class=\"linkified\">https://ibm.webex.com/meet/schneider</a></p> <p>Für Vor-Ort-Teilnehmer bietet sich nach der Session die Gelegenheit zum persönlichen Austausch und Networking in ungezwungener Atmosphäre, bei einem kleinen Imbiss und Getränken.</p> <p>FAQs:<br/>Wie kann ich den Organisator kontaktieren, wenn ich Fragen habe?<br/>Du kannst mich gerne direkt über meine Mailadresse [masked] kontaktieren.</p> <p>In welcher Sprache wird die Roundtable durchgeführt?<br/>Die Roundtable wird in deutscher Sprache abgehalten. Ich kann nicht vor Ort kommen.</p> <p>Besteht die Möglichkeit, remote an der Roundtable teilzunehmen? Ja, du kannst dich über folgenden Link ab ca. 10.30 Uhr einwählen: <a href=\"https://ibm.webex.com/meet/schneider\" class=\"linkified\">https://ibm.webex.com/meet/schneider</a></p> ',\n  //       how_to_find_us: 'Vor-Ort (nur nach Registrierung über Eventbrite)\\n\\nWebEx: https://ibm.webex.com/meet/schneider',\n  //       visibility: 'public',\n  //       pro_is_email_shared: false\n  //     },\n  //     {\n  //       created: 1551887400000,\n  //       duration: 10800000,\n  //       id: '259531870',\n  //       name: 'NEXT\\'19 Recap // Intro to Google Anthos  / CI/CD in Google Cloud',\n  //       rsvp_limit: 80,\n  //       date_in_series_pattern: false,\n  //       status: 'upcoming',\n  //       time: 1556125200000,\n  //       local_date: '2019-04-24',\n  //       local_time: '19:00',\n  //       updated: 1554840522000,\n  //       utc_offset: 7200000,\n  //       waitlist_count: 28,\n  //       yes_rsvp_count: 80,\n  //       venue: {\n  //         id: 26226474,\n  //         name: 'ConSol Software GmbH',\n  //         lat: 48.1204833984375,\n  //         lon: 11.60252857208252,\n  //         repinned: true,\n  //         address_1: 'St.-Cajetan-Straße 43, ',\n  //         city: 'München',\n  //         country: 'de',\n  //         localized_country_name: 'Germany'\n  //       },\n  //       group: {\n  //         created: 1478266159000,\n  //         name: 'GDG Munich Cloud',\n  //         id: 21038385,\n  //         join_mode: 'open',\n  //         lat: 48.13999938964844,\n  //         lon: 11.579999923706055,\n  //         urlname: 'GDG-munich-cloud',\n  //         who: 'Mitglieder',\n  //         localized_location: 'München, Germany',\n  //         state: '',\n  //         country: 'de',\n  //         region: 'en_US',\n  //         timezone: 'Europe/Berlin'\n  //       },\n  //       link: 'https://www.meetup.com/GDG-munich-cloud/events/259531870/',\n  //       description: '<p>WEEEEEE!!!!</p> <p>The next regular Meetup with Big Thanks to ConSol Software GmbH (<a href=\"https://dev.consol.de\" class=\"linkified\">https://dev.consol.de</a>). We are grateful, that they are providing us with space and food for our upcoming meetup and they are looking for people!</p> <p>As always we are looking for a place to host our Meetup and we are looking for speakers in all topics regarding cloud infrastructure.</p> <p>For this evening we have the following schedule:</p> <p>19:00 Meet &amp; Greet &amp; Pizza<br/>19.30 RECAP NEXT 2019<br/>19.45 - Intro to Google Anthos - the multicloud manager - David das Neves - Google Cloud Program Manager<br/>20.15 - CI / CD nativ in Google Cloud - Mario Fahlandt Königspunkt GmbH</p> <p>I\\'m looking forward to see you!</p> ',\n  //       visibility: 'public',\n  //       pro_is_email_shared: false\n  //     },\n  //     {\n  //       created: 1552599828000,\n  //       duration: 10800000,\n  //       id: '259772576',\n  //       name: 'Codefin, or a Theory of Relativity for Software Development',\n  //       date_in_series_pattern: false,\n  //       status: 'upcoming',\n  //       time: 1555434000000,\n  //       local_date: '2019-04-16',\n  //       local_time: '19:00',\n  //       updated: 1552941195000,\n  //       utc_offset: 7200000,\n  //       waitlist_count: 0,\n  //       yes_rsvp_count: 119,\n  //       venue: {\n  //         id: 26082467,\n  //         name: 'codecentric AG',\n  //         lat: 48.13685989379883,\n  //         lon: 11.523862838745117,\n  //         repinned: true,\n  //         address_1: 'Elsenheimerstraße 55A',\n  //         city: 'München',\n  //         country: 'de',\n  //         localized_country_name: 'Germany'\n  //       },\n  //       group: {\n  //         created: 1411685347000,\n  //         name: 'Munich Software Craft Community',\n  //         id: 17214922,\n  //         join_mode: 'approval',\n  //         lat: 48.13999938964844,\n  //         lon: 11.579999923706055,\n  //         urlname: 'munich-software-craft-community',\n  //         who: 'Software Crafters',\n  //         localized_location: 'München, Germany',\n  //         state: '',\n  //         country: 'de',\n  //         region: 'en_US',\n  //         timezone: 'Europe/Berlin'\n  //       },\n  //       link: 'https://www.meetup.com/munich-software-craft-community/events/259772576/',\n  //       description: '<p>Do you always do three-week sprints, user stories, pair programming, TDD, or anything really that starts with \"we always do ...\"? Then chances are you\\'re missing out on the bigger picture and are often applying suboptimal methods. So join us on a journey of building a startup, where we\\'ll discover how different measures of time, input, value, quality, collaboration, design, testing, delivery and more are applicable given the various situations. Codefin, or a Theory of Relativity for Software Development will help you become more situationally aware and let you choose practices that are relevant and effective instead of selling you ill-suited silver-bullets.</p> <p>Codefin (<a href=\"https://codefin.org\" class=\"linkified\">https://codefin.org</a>) is about applying the Cynefin sense making framework to specific practices of software development, to e.g. methodology, architecture and design, testing practices, and more. With this approach we bridge over a gap, for Cynefin is mostly used for strategic decisions, while software developers often choose habitually their favourite tools, irrespectively of the context. The resulting Codefin framework is a synergy, where the various methods and practices of software development each find their place in the Cynefin domain landscape, and it becomes clear why the multitude came about and what is the best choice in a given situation.</p> <p>The Cynefin framework (<a href=\"https://en.wikipedia.org/wiki/Cynefin_framework\" class=\"linkified\">https://en.wikipedia.org/wiki/Cynefin_framework</a>) supports the process of making decisions by describing a context using five domains: Disorder, Chaos, Complex, Complicated and Obvious. The framework characterises each of the domains and recommends suitable strategies for dealing with the challenges. The resulting understanding of the situation is a key enabler of good decisions, and for this reason Cynefin is widely used by leaders and in management roles for strategic decisions. However, it can also be eminently applied to software development, thereby helping programmers make sense of all the various approaches to design, architecture, testing, methodologies and beyond.</p> <p>Those who attended the first talk on Codefin may be delighted that we shall continue where we finished our journey in 2017, building upon and extending the original, anchoring the learnings into the development cycle of a new startup, from inception to operation. Those who haven\\'t heard of Codefin or Cynefin may be relieved that this talk somehow magically manages to build on both without assuming or requiring prior exposure to said topics. And those in Munich may be especially pleased that extra care has been taken in response to the gentleman in Munich, who wished to had heard more about the non-decisions we\\'re accustomed to make habitually. In short: all are invited!</p> <p>Géza is a seasoned software artisan who believes that culture is at the heart of most things. Accordingly, besides practicing the fine art of intuiting, inventing, architecting, designing and crafting code, he also pays attention to foster the growth of his colleagues. At work creating the financial products and services of the future, he gets his kicks from learning from and with like-minded thinkers and tinkerers. He is the founder of the Software Craftsmanship community Coders Only (<a href=\"https://zurich.codersonly.org\" class=\"linkified\">https://zurich.codersonly.org</a>), organising and facilitating events such as the Global Day of Coderetreat and SoCraTes Day Switzerland. He can be found on Twitter with annually changing avatars as @infinitary (<a href=\"https://twitter.com/infinitary\" class=\"linkified\">https://twitter.com/infinitary</a>).</p> <p>Agenda:<br/>19:00 Pizza &amp; Networking<br/>19:30 Talk<br/>Afterwards Discussion</p> ',\n  //       visibility: 'public'\n  //     },\n  //     {\n  //       created: 1554728176000,\n  //       duration: 10800000,\n  //       id: '260445923',\n  //       name: 'Kotlin Users Group Meetup May',\n  //       rsvp_limit: 90,\n  //       date_in_series_pattern: false,\n  //       status: 'upcoming',\n  //       time: 1557161100000,\n  //       local_date: '2019-05-06',\n  //       local_time: '18:45',\n  //       rsvp_close_offset: 'PT44H',\n  //       updated: 1554978288000,\n  //       utc_offset: 7200000,\n  //       waitlist_count: 1,\n  //       yes_rsvp_count: 90,\n  //       venue: {\n  //         id: 26112492,\n  //         name: 'Google',\n  //         lat: 48.143035888671875,\n  //         lon: 11.541084289550781,\n  //         repinned: true,\n  //         address_1: 'Erika-Mann-Straße 33',\n  //         city: 'München',\n  //         country: 'de',\n  //         localized_country_name: 'Germany'\n  //       },\n  //       group: {\n  //         created: 1421043158000,\n  //         name: 'Kotlin User Group Munich - KUG Munich',\n  //         id: 18325305,\n  //         join_mode: 'open',\n  //         lat: 48.13999938964844,\n  //         lon: 11.579999923706055,\n  //         urlname: 'Kotlin-User-Group-Munich',\n  //         who: 'KUG-Hacker',\n  //         localized_location: 'München, Germany',\n  //         state: '',\n  //         country: 'de',\n  //         region: 'en_US',\n  //         timezone: 'Europe/Berlin'\n  //       },\n  //       link: 'https://www.meetup.com/Kotlin-User-Group-Munich/events/260445923/',\n  //       description: '<p>Hello Kotliners. Join us in our May gathering at Google office.</p> <p>Agenda:</p> <p>19:00 - Opening doors</p> <p>19:15 - Michal Harakal - Kotlin multiplatform roller-coaster ride or how I\\'ve rewritten a conference app over the weekend.</p> <p>19.55 - Shagen Ogandzhanian (JetBrains) - Kotlin and JS interop, what\\'s next. How to use javascript libraries in Kotlin world</p> <p>20.30 - Leonid Popescu (Payworks) - Hybrid SDKs or how we started with Kotlin/Multiplatform without trashing the existing code base</p> <p>Have you been working on a project with Kotlin? Is there a library you would like to discuss? Do you want to try public speaking?<br/>Message us, come and have fun sharing your Kotlin story!</p> ',\n  //       how_to_find_us: 'We will need the full list of guests to print badges beforehand. RSVP will be closed a few days before to implement it.',\n  //       visibility: 'public'\n  //     }\n  //   ]\n  // };\n}\n\nexport { getSuggestions, getUpcomingEvents };\n","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\n\nclass CitySearch extends Component {\n  state = {\n    input: '',\n    suggestions: [],\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ input: value });\n    getSuggestions(value).then(suggestions => this.setState({ suggestions }));\n  }\n\n  handleSuggestionClicked = (text, lat, lon) => {\n    this.setState({ input: text, suggestions: [] });\n    if (this.props.updateCity) {\n      this.props.updateCity(lat, lon);\n    }\n  }\n\n  render() {\n    const listCities = this.state.suggestions.map((suggestion) =>\n      <li key={suggestion.name_string} onClick={() => this.handleSuggestionClicked(suggestion.name_string, suggestion.lat, suggestion.lon)}>\n        {suggestion.name_string}\n      </li>\n    );\n\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          value={this.state.input}\n          onChange={this.handleInputChanged}\n          placeholder=\"City\"\n        />\n        <ul className=\"suggestions\">\n          {listCities}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass TimeFilter extends Component {\n  render() {\n    return (\n      <div className=\"TimeFilter\">\n      </div>\n    );\n  }\n}\n\nexport default TimeFilter;","import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    expanded: false,\n  }\n\n  onDetailsButtonClicked = () => {\n    this.setState(prevState => ({\n      expanded: !prevState.expanded\n    }));\n  }\n\n  render() {\n    const event = this.props.event || {};\n    const venue = event.venue || {};\n    const group = event.group || {};\n    return (\n      <li className=\"Event\">\n        <p className=\"time\">{event.local_time} - {event.local_date}</p>\n        <p className=\"name\">{event.name}</p>\n        <p className=\"group-name\">Group: {group.name}</p>\n        <p className=\"going\">{event.yes_rsvp_count} people are going</p>\n        {this.state.expanded &&\n          <div className=\"extra\">\n            {venue && \n              <p className=\"address\">\n                {venue.name\n                  + ', ' + venue.address_1\n                  + ', ' + venue.city\n                  + ', ' + venue.localized_country_name\n                }\n              </p>\n            }\n            <div className=\"description\" dangerouslySetInnerHTML={{__html: event.description}} />\n            <p className=\"visibility\">{event.visibility}</p>\n            <a className=\"link\" href={event.link}>Event Link</a>\n          </div>\n        }\n        <button className=\"details-btn\" onClick={this.onDetailsButtonClicked}>Details</button>\n      </li>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event => \n          <Event key={event.id} event={event} />\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CitySearch from './CitySearch';\nimport TimeFilter from './TimeFilter';\nimport EventList from './EventList';\nimport { getUpcomingEvents } from './api';\n\nclass App extends Component {\n  state = {\n    events: [],\n  }\n\n  componentDidMount() {\n    this.updateEvents();\n  }\n\n  updateCity = (lat, lon) => {\n    this.updateEvents(lat, lon);\n  }\n\n  updateEvents = (lat, lon, radius) => {\n    getUpcomingEvents(lat, lon, radius).then(events => this.setState({ events }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Meetup Events</h1>\n        <CitySearch updateCity={this.updateCity}/>\n        <TimeFilter />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}